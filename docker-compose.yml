version: '3'

services:
  php:
    container_name: openweather-php
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      nginx:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./src:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - openweather-network

  nginx:
    container_name: openweather-nginx
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '8080:80'
      - '443:443'
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - openweather-network

  mysql:
    container_name: openweather-mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - openweather-data:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - openweather-network
    ports:
      - '3306:3306'
    healthcheck:
      test: "exit 0"
    environment:
      MYSQL_DATABASE: openweather
      MYSQL_ROOT_PASSWORD: r0ot%Own
      MYSQL_USER: openweather
      MYSQL_PASSWORD: P4ss%Owm1

  redis:
    container_name: openweather-redis
    build:
      context: ./docker/redis
      dockerfile: Dockerfile
    networks:
      - openweather-network
    ports:
      - '6379:6379'

networks:
  openweather-network:
    driver: bridge


volumes:
  openweather-data:
    driver: local